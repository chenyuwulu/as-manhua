<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:scrollbars="none"
    android:fillViewport="false">
    <LinearLayout
        android:orientation="vertical"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content">
        <Button
            android:id="@+id/start_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="打开按钮activity" />
        <Button
            android:id="@+id/close_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="关闭自己" />
        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content">

            <TableLayout android:layout_width="wrap_content" android:layout_height="wrap_content">
                <TableRow>
                    <TextView android:layout_width="wrap_content"
                        android:text="这里是展示如何在切换横竖屏幕的时候，保存当前的activity数据"
                        android:layout_height="wrap_content"/>
                </TableRow>
                <TableRow>
                    <TextView android:layout_width="wrap_content"
                        android:text="1.直接配置清单写一句保存"
                        android:layout_height="wrap_content"/>
                </TableRow>
                <TableRow>
                    <TextView android:layout_width="wrap_content"
                        android:text="android:configChanges=orientation丨keyboardHidden丨screenSize"
                        android:layout_height="wrap_content"/>
                </TableRow>
                <TableRow>
                    <TextView android:layout_width="wrap_content"
                        android:text="2.直接定死不给切换，比如锁定竖屏"
                        android:layout_height="wrap_content"/>
                </TableRow>
                <TableRow>
                    <TextView android:layout_width="wrap_content"
                        android:text="3.kotlin这边获取到改变后切换不同的布局"
                        android:layout_height="wrap_content"/>
                </TableRow>
            </TableLayout>
        </LinearLayout>

        <LinearLayout
            android:layout_marginTop="20dp"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content">

            <TableLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content">
                <TableRow
                    android:layout_marginBottom="20dp">
                    <TextView
                        android:textSize="20dp"
                        android:textColor="#66ccff"
                        android:layout_width="wrap_content"
                        android:text="任务栈是activity的堆叠容器"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginBottom="20dp">
                    <TextView
                        android:textSize="20dp"
                        android:textColor="#66ccff"
                        android:layout_width="wrap_content"
                        android:text="通过以下的Android启动模式可以调整activity任务栈模式"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="在standard模式下，每当启动一个新的Activity，它就会进入任务栈，并处于栈顶的位置，对于使用standard模式的Activity，系统不会判断该Activity在栈中是否存在，每次启动都会创建一个新的实例"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="singleTop模式与standard类似，不同的是，当启动的Activity已经位于栈顶时，则直接使用它不创建新的实例。如果启动的Activity没有位于栈顶时，则创建一个新的实例位于栈顶"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="singleTask模式，当Activity 的启动模式指定为singleTask，每次启动该Activity时，系统首先会检查栈中是否存在该活动的实例，如果发现已经存在则直接使用该实例， 并将当前Activity之上的所有Activity出栈，如果没有发现则创建一个新的实例"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="singlelnstance模式加载Activity时，无论从哪个任务栈中启动该Activity，只会创建一个Activity实例，并且会使用一个全新的任务栈来装载该Activity实例"
                        />
                </TableRow>
            </TableLayout>
        </LinearLayout>
        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content">
            <TableLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content">
                <TableRow
                    android:layout_marginBottom="20dp">
                    <TextView
                        android:textSize="20dp"
                        android:textColor="#66ccff"
                        android:layout_width="wrap_content"
                        android:text="Intent主要介绍"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="1.启动 Activity"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="2.启动服务"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="3.发送广播"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginBottom="20dp">
                    <TextView
                        android:textSize="20dp"
                        android:textColor="#66ccff"
                        android:layout_width="wrap_content"
                        android:text="Intent类型"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="1.显式intent，主要是用kotlin代码这边创建操作"
                        />
                </TableRow>
                <TableRow
                    android:layout_marginTop="10dp" android:layout_marginBottom="10dp">
                    <TextView
                        android:layout_width="wrap_content"
                        android:text="2.隐式intent，主要是在配置文件里面操作"
                        />
                </TableRow>
            </TableLayout>
        </LinearLayout>
    </LinearLayout>
</ScrollView>
